name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  ci-checks:
    name: ci-checks-(Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Lint with ruff
        run: ruff check . --no-fix
      - name: Format check with black
        run: black --check --diff .
      - name: Type check with mypy
        run: mypy src/papervisor --ignore-missing-imports
      - name: Test with pytest
        run: pytest tests/ -v
        continue-on-error: false
      - name: Xenon complexity gate
        run: xenon --max-absolute C --max-modules B --max-average A --exclude src/papervisor/pdf_downloader.py,src/papervisor/cli.py,src/papervisor/web_server.py src/papervisor
      - name: Radon maintainability/complexity summary
        run: |
          radon mi src/papervisor -j | python3 -c "import sys, json; d=json.load(sys.stdin); mis=[v['mi'] for v in d.values()]; grades=[v['rank'] for v in d.values()]; avg_rank=chr(round(sum(map(ord,grades))/len(grades))); avg_score=sum(mis)/len(mis) if mis else 0; print(f'Codebase average: {avg_rank} ({avg_score:.2f})'); [print(f'{k} - {v['rank']} ({v['mi']:.1f})') for k,v in d.items()]"
