[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "papervisor"
version = "0.1.0"
description = "A modular, open-source pipeline for accelerating systematic literature reviews"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nuno Paiva", email = "nuno.f.paiva@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.12"
dependencies = [
    "pandas>=2.0.0",
    "pyyaml>=6.0.0",
    "requests>=2.28.0",
    "flask>=2.0.0",
    "PyPDF2>=3.0.0",
    "urllib3>=1.26.0",
    "werkzeug>=2.0.0",
    "openai>=0.27.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.2.2",
    "black==25.1.0",
    "mypy==1.17.1",
    "pre-commit==3.7.0",
    "types-PyYAML>=6.0.0",
    "pandas-stubs>=2.0.0",
    "types-requests>=2.28.0",
    "types-urllib3>=1.26.0",
    "xenon==0.9.1",
    "radon==6.0.1",
    "ruff==0.4.4",
    "eradicate==3.0.0",
    "vulture==2.11",
    "interrogate==1.7.0",
    "bandit==1.8.6",
    "detect-secrets==1.5.0",
    "deptry==0.23.1",
]

[project.urls]
Homepage = "https://github.com/yourusername/papervisor"
Repository = "https://github.com/yourusername/papervisor"
Documentation = "https://papervisor.readthedocs.io"
"Bug Tracker" = "https://github.com/yourusername/papervisor/issues"

[project.scripts]
papervisor = "papervisor.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.cargo]
# Rust configuration for potential Rust components
edition = "2021"

[tool.maturin]
# Configuration for Python-Rust bindings if needed
module-name = "papervisor._rust"
features = ["pyo3/extension-module"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-v",  # Verbose output
    "--tb=short",  # Shorter traceback format
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for workflows",
    "web: Web interface tests",
    "slow: Tests that take longer to run",
]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false  # Allow untyped decorators (Flask routes)
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = false  # Disable unreachable code warnings
strict_equality = true

# Allow some flexibility for Flask patterns
[[tool.mypy.overrides]]
module = "*.web_server"
disallow_untyped_decorators = false
disallow_any_decorated = false

# Flask-specific overrides
[[tool.mypy.overrides]]
module = "flask.*"
ignore_missing_imports = true

# Deptry: treat the "dev" optional dependency group as dev-only so it
# won't be checked for DEP002 (unused dependencies).
[tool.deptry]
pep621_dev_dependency_groups = ["dev"]
